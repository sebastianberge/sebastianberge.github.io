{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/CV.js\";\nimport React from \"react\";\nimport { Box, Typography, List, ListItem, ListItemText, Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CV = () => {\n  const experience = [{\n    role: \"Software Developer\",\n    company: \"Tech Solutions Inc.\",\n    years: \"2020 - Present\",\n    description: \"Develop and maintain web applications using React and Node.js.\"\n  }, {\n    role: \"Junior Developer\",\n    company: \"Web Innovations Ltd.\",\n    years: \"2018 - 2020\",\n    description: \"Assisted in the development of client-side web applications.\"\n  }];\n  const education = [{\n    degree: \"B.Sc. Computer Science\",\n    institution: \"University of Tech\",\n    years: \"2014 - 2018\"\n  }, {\n    degree: \"High School Diploma\",\n    institution: \"Springfield High\",\n    years: \"2010 - 2014\"\n  }];\n  const skills = [\"React\", \"Node.js\", \"JavaScript\", \"HTML/CSS\", \"Git\", \"SQL\"];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Curriculum Vitae\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: experience.map((job, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: job.role + \" - \" + job.company,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"textPrimary\",\n                children: job.years\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), \" — \" + job.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Education\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: education.map((edu, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: edu.degree,\n          secondary: edu.institution + \" - \" + edu.years\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = CV;\nexport default CV;\nvar _c;\n$RefreshReg$(_c, \"CV\");","map":{"version":3,"names":["React","Box","Typography","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","CV","experience","role","company","years","description","education","degree","institution","skills","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","Fragment","alignItems","primary","secondary","component","color","edu","skill","_c","$RefreshReg$"],"sources":["/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/CV.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from \"@mui/material\";\n\nconst CV = () => {\n  const experience = [\n    {\n      role: \"Software Developer\",\n      company: \"Tech Solutions Inc.\",\n      years: \"2020 - Present\",\n      description:\n        \"Develop and maintain web applications using React and Node.js.\",\n    },\n    {\n      role: \"Junior Developer\",\n      company: \"Web Innovations Ltd.\",\n      years: \"2018 - 2020\",\n      description:\n        \"Assisted in the development of client-side web applications.\",\n    },\n  ];\n\n  const education = [\n    {\n      degree: \"B.Sc. Computer Science\",\n      institution: \"University of Tech\",\n      years: \"2014 - 2018\",\n    },\n    {\n      degree: \"High School Diploma\",\n      institution: \"Springfield High\",\n      years: \"2010 - 2014\",\n    },\n  ];\n\n  const skills = [\"React\", \"Node.js\", \"JavaScript\", \"HTML/CSS\", \"Git\", \"SQL\"];\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" gutterBottom>\n        Curriculum Vitae\n      </Typography>\n      <Typography variant=\"h6\">Experience</Typography>\n      <List>\n        {experience.map((job, index) => (\n          <React.Fragment key={index}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemText\n                primary={job.role + \" - \" + job.company}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {job.years}\n                    </Typography>\n                    {\" — \" + job.description}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            <Divider component=\"li\" />\n          </React.Fragment>\n        ))}\n      </List>\n      <Typography variant=\"h6\">Education</Typography>\n      <List>\n        {education.map((edu, index) => (\n          <ListItem key={index}>\n            <ListItemText\n              primary={edu.degree}\n              secondary={edu.institution + \" - \" + edu.years}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Typography variant=\"h6\">Skills</Typography>\n      <List>\n        {skills.map((skill, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={skill} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default CV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}