{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/CV.js\";\nimport React from \"react\";\nimport { Box, Typography, List, ListItem, ListItemText, Divider, Stack, Chip } from \"@mui/material\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CV = () => {\n  const experience = [{\n    role: \"Senior Cloud & DevOps Engineer\",\n    company: \"Devoteam M Cloud\",\n    years: \"2024 - Present\",\n    description: \"N/A\"\n  }, {\n    role: \"Cloud Engineer\",\n    company: \"Tietoevry Tech Services\",\n    years: \"2022 - 2024\",\n    description: \"N/A\"\n  }, {\n    role: \"DevOps Engineer\",\n    company: \"Tietoevry Fintech\",\n    years: \"2020 - 2022\",\n    description: \"N/A\"\n  }];\n  const education = [{\n    degree: \"B.Sc. Computer Engineer\",\n    institution: \"Western University of Applied Sciences\",\n    years: \"2017 - 2020\"\n  }];\n  const skills = [{\n    name: \"Azure\",\n    icon: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }, this)\n  }, {\n    name: \"Azure DevOps\",\n    icon: null\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Curriculum Vitae\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: experience.map((job, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: job.role + \" - \" + job.company,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                color: \"textPrimary\",\n                children: job.years\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), \" — \" + job.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Education\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: education.map((edu, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: edu.degree,\n          secondary: edu.institution + \" - \" + edu.years\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 1,\n      flexWrap: \"wrap\",\n      children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(Chip, {\n        label: skill.name,\n        color: \"primary\",\n        variant: \"outlined\",\n        icon: skill.icon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = CV;\nexport default CV;\nvar _c;\n$RefreshReg$(_c, \"CV\");","map":{"version":3,"names":["React","Box","Typography","List","ListItem","ListItemText","Divider","Stack","Chip","GitHubIcon","jsxDEV","_jsxDEV","CV","experience","role","company","years","description","education","degree","institution","skills","name","icon","fileName","_jsxFileName","lineNumber","columnNumber","p","children","variant","gutterBottom","map","job","index","Fragment","alignItems","primary","secondary","component","color","edu","direction","spacing","flexWrap","skill","label","_c","$RefreshReg$"],"sources":["/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/CV.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Stack,\n  Chip,\n} from \"@mui/material\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nconst CV = () => {\n  const experience = [\n    {\n      role: \"Senior Cloud & DevOps Engineer\",\n      company: \"Devoteam M Cloud\",\n      years: \"2024 - Present\",\n      description: \"N/A\",\n    },\n    {\n      role: \"Cloud Engineer\",\n      company: \"Tietoevry Tech Services\",\n      years: \"2022 - 2024\",\n      description: \"N/A\",\n    },\n    {\n      role: \"DevOps Engineer\",\n      company: \"Tietoevry Fintech\",\n      years: \"2020 - 2022\",\n      description: \"N/A\",\n    },\n  ];\n\n  const education = [\n    {\n      degree: \"B.Sc. Computer Engineer\",\n      institution: \"Western University of Applied Sciences\",\n      years: \"2017 - 2020\",\n    },\n  ];\n\n  const skills = [\n    { name: \"Azure\", icon: <GitHubIcon /> },\n    { name: \"Azure DevOps\", icon: null },\n  ];\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" gutterBottom>\n        Curriculum Vitae\n      </Typography>\n      <Typography variant=\"h6\">Experience</Typography>\n      <List>\n        {experience.map((job, index) => (\n          <React.Fragment key={index}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemText\n                primary={job.role + \" - \" + job.company}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {job.years}\n                    </Typography>\n                    {\" — \" + job.description}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            <Divider component=\"li\" />\n          </React.Fragment>\n        ))}\n      </List>\n      <Typography variant=\"h6\">Education</Typography>\n      <List>\n        {education.map((edu, index) => (\n          <ListItem key={index}>\n            <ListItemText\n              primary={edu.degree}\n              secondary={edu.institution + \" - \" + edu.years}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Typography variant=\"h6\">Skills</Typography>\n      <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\n        {skills.map((skill, index) => (\n          <Chip\n            key={index}\n            label={skill.name}\n            color=\"primary\"\n            variant=\"outlined\"\n            icon={skill.icon}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default CV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}