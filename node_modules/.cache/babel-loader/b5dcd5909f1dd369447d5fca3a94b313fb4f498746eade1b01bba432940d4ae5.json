{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { marked } from \"marked\";\nimport hljs from \"highlight.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderer = new marked.Renderer();\nrenderer.code = function (code, language) {\n  const validLanguage = hljs.getLanguage(language) ? language : \"plaintext\";\n  return `<pre><code class=\"hljs ${validLanguage}\">${hljs.highlight(code, {\n    language: validLanguage\n  }).value}</code></pre>`;\n};\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: function (code, lang) {\n    const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\n    return hljs.highlight(code, {\n      language\n    }).value;\n  },\n  langPrefix: \"hljs language-\",\n  pedantic: false,\n  breaks: true,\n  gfm: true,\n  smartLists: true,\n  smartypants: false\n});\nconst PostDetail = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    const fetchPost = async () => {\n      const url = `https://api.github.com/repos/sebastianberge/blog-posts/contents/posts/${postId}.md`;\n      const response = await axios.get(url);\n      const decodedContent = atob(response.data.content);\n      const htmlContent = marked(decodedContent);\n      setPost({\n        title: postId,\n        content: htmlContent\n      });\n    };\n    fetchPost();\n  }, [postId]);\n  if (!post.content) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\" \", {\n        __html: post.content\n      }, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"Ib6mjaD1bq/XqM8iUPz4+SXPt88=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","Typography","axios","marked","hljs","jsxDEV","_jsxDEV","renderer","Renderer","code","language","validLanguage","getLanguage","highlight","value","setOptions","lang","langPrefix","pedantic","breaks","gfm","smartLists","smartypants","PostDetail","_s","postId","post","setPost","title","content","fetchPost","url","response","get","decodedContent","atob","data","htmlContent","children","fileName","_jsxFileName","lineNumber","columnNumber","p","variant","gutterBottom","__html","_c","$RefreshReg$"],"sources":["/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { marked } from \"marked\";\nimport hljs from \"highlight.js\";\n\nconst renderer = new marked.Renderer();\nrenderer.code = function (code, language) {\n  const validLanguage = hljs.getLanguage(language) ? language : \"plaintext\";\n  return `<pre><code class=\"hljs ${validLanguage}\">${\n    hljs.highlight(code, { language: validLanguage }).value\n  }</code></pre>`;\n};\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: function (code, lang) {\n    const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\n    return hljs.highlight(code, { language }).value;\n  },\n  langPrefix: \"hljs language-\",\n  pedantic: false,\n  breaks: true,\n  gfm: true,\n  smartLists: true,\n  smartypants: false,\n});\n\nconst PostDetail = () => {\n  const { postId } = useParams();\n  const [post, setPost] = useState({ title: \"\", content: \"\" });\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const url = `https://api.github.com/repos/sebastianberge/blog-posts/contents/posts/${postId}.md`;\n      const response = await axios.get(url);\n      const decodedContent = atob(response.data.content);\n      const htmlContent = marked(decodedContent);\n      setPost({ title: postId, content: htmlContent });\n    };\n\n    fetchPost();\n  }, [postId]);\n\n  if (!post.content) return <Typography>Loading...</Typography>;\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" gutterBottom>\n        {post.title}\n      </Typography>\n      <Typography> {{ __html: post.content }} </Typography>\n    </Box>\n  );\n};\n\nexport default PostDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}