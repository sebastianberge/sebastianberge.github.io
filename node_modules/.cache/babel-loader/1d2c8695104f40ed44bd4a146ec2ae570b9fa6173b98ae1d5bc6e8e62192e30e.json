{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Card, CardContent, Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { marked } from \"marked\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // Update the API URL to point to the 'posts' folder\n        const {\n          data\n        } = await axios.get(\"https://api.github.com/repos/sebastianberge/blog-posts/contents/posts\");\n        console.log(\"API Data:\", data); // This helps to check what the API returns\n        const markdownFiles = data.filter(file => file.name.endsWith(\".md\"));\n        const postsData = await Promise.all(markdownFiles.map(async file => {\n          const fileData = await axios.get(file.download_url);\n          const htmlContent = marked(fileData.data);\n          return {\n            html: htmlContent,\n            title: file.name.replace(\".md\", \"\"),\n            date: dayjs(fileData.data.commit.author.date).format(\"MMMM D, YYYY\")\n          };\n        }));\n        setPosts(postsData);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              dangerouslySetInnerHTML: {\n                __html: post.title\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: [\"Last updated: \", post.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              dangerouslySetInnerHTML: {\n                __html: post.html\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Grid","axios","marked","dayjs","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","fetchPosts","data","get","console","log","markdownFiles","filter","file","name","endsWith","postsData","Promise","all","map","fileData","download_url","htmlContent","html","title","replace","date","commit","author","format","error","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","post","index","item","xs","sm","md","component","dangerouslySetInnerHTML","__html","color","_c","$RefreshReg$"],"sources":["/Users/sebastianberge/Kode/GitHub/personal/sebastianberge.github.io/src/pages/Blog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Card, CardContent, Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { marked } from \"marked\";\nimport dayjs from \"dayjs\";\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // Update the API URL to point to the 'posts' folder\n        const { data } = await axios.get(\n          \"https://api.github.com/repos/sebastianberge/blog-posts/contents/posts\"\n        );\n        console.log(\"API Data:\", data); // This helps to check what the API returns\n        const markdownFiles = data.filter((file) => file.name.endsWith(\".md\"));\n        const postsData = await Promise.all(\n          markdownFiles.map(async (file) => {\n            const fileData = await axios.get(file.download_url);\n            const htmlContent = marked(fileData.data);\n            return {\n              html: htmlContent,\n              title: file.name.replace(\".md\", \"\"),\n              date: dayjs(fileData.data.commit.author.date).format(\n                \"MMMM D, YYYY\"\n              ),\n            };\n          })\n        );\n        setPosts(postsData);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" gutterBottom>\n        Blog Posts\n      </Typography>\n      <Grid container spacing={2}>\n        {posts.map((post, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <Card>\n              <CardContent>\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  dangerouslySetInnerHTML={{ __html: post.title }}\n                />\n                <Typography color=\"text.secondary\">\n                  Last updated: {post.date}\n                </Typography>\n                <Typography\n                  component=\"div\"\n                  dangerouslySetInnerHTML={{ __html: post.html }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Blog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,IAAI,QAAQ,eAAe;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,uEACF,CAAC;QACDC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC,CAAC,CAAC;QAChC,MAAMI,aAAa,GAAGJ,IAAI,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtE,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCP,aAAa,CAACQ,GAAG,CAAC,MAAON,IAAI,IAAK;UAChC,MAAMO,QAAQ,GAAG,MAAMvB,KAAK,CAACW,GAAG,CAACK,IAAI,CAACQ,YAAY,CAAC;UACnD,MAAMC,WAAW,GAAGxB,MAAM,CAACsB,QAAQ,CAACb,IAAI,CAAC;UACzC,OAAO;YACLgB,IAAI,EAAED,WAAW;YACjBE,KAAK,EAAEX,IAAI,CAACC,IAAI,CAACW,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;YACnCC,IAAI,EAAE3B,KAAK,CAACqB,QAAQ,CAACb,IAAI,CAACoB,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,MAAM,CAClD,cACF;UACF,CAAC;QACH,CAAC,CACH,CAAC;QACDxB,QAAQ,CAACW,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdrB,OAAO,CAACqB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDxB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACT,GAAG;IAACuC,CAAC,EAAE,CAAE;IAAAC,QAAA,gBACR/B,OAAA,CAACR,UAAU;MAACwC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbrC,OAAA,CAACL,IAAI;MAAC2C,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxB5B,KAAK,CAACe,GAAG,CAAC,CAACsB,IAAI,EAAEC,KAAK,kBACrBzC,OAAA,CAACL,IAAI;QAAC+C,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eAC9B/B,OAAA,CAACP,IAAI;UAAAsC,QAAA,eACH/B,OAAA,CAACN,WAAW;YAAAqC,QAAA,gBACV/B,OAAA,CAACR,UAAU;cACTwC,OAAO,EAAC,IAAI;cACZc,SAAS,EAAC,KAAK;cACfC,uBAAuB,EAAE;gBAAEC,MAAM,EAAER,IAAI,CAACjB;cAAM;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC,eACFrC,OAAA,CAACR,UAAU;cAACyD,KAAK,EAAC,gBAAgB;cAAAlB,QAAA,GAAC,gBACnB,EAACS,IAAI,CAACf,IAAI;YAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eACbrC,OAAA,CAACR,UAAU;cACTsD,SAAS,EAAC,KAAK;cACfC,uBAAuB,EAAE;gBAAEC,MAAM,EAAER,IAAI,CAAClB;cAAK;YAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAhB6BI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBrC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CA/DID,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AAiEV,eAAeA,IAAI;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}